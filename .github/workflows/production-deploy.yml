name: Production Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 브랜치 보호 체크
  branch-protection:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check branch protection
        run: |
          if [ "${{ github.event.pull_request.base.ref }}" != "main" ]; then
            echo "❌ Only main branch can be merged to production"
            exit 1
          fi
          echo "✅ Branch protection check passed"

  # 코드 품질 검사 (비차단)
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Auto-fix unused imports and variables
        run: |
          echo "🔧 Auto-fixing unused imports and variables..."
          npm run fix-unused || echo "⚠️ Auto-fix completed with warnings"

      - name: Commit auto-fixed changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "🔧 Auto-fix: Remove unused imports and variables [skip ci]"
            git push
            echo "✅ Auto-fixed changes committed"
          else
            echo "ℹ️ No changes to commit"
          fi

      - name: Run linting (non-blocking)
        run: |
          echo "🔍 Running linting checks..."
          npm run lint || {
            echo "⚠️ Lint warnings found (non-blocking)"
            echo "📊 Lint check completed with warnings - deployment will continue"
          }

      - name: Type check
        run: |
          echo "🔍 Running TypeScript type check..."
          npm run type-check || {
            echo "⚠️ Type check warnings found (non-blocking)"
            echo "📊 Type check completed with warnings - deployment will continue"
          }

      - name: Build check
        run: |
          echo "🔨 Running build check..."
          npm run build || {
            echo "❌ Build failed - this will block deployment"
            exit 1
          }
          echo "✅ Build check passed"

  # 운영 서버 배포 (main 브랜치 푸시 시에만)
  deploy-production:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://app.hanguru.school
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Auto-fix before deployment
        run: |
          echo "🔧 Auto-fixing before deployment..."
          npm run fix-unused || echo "⚠️ Auto-fix completed with warnings"

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"

      - name: Notify deployment
        run: |
          echo "🚀 Production deployment completed"
          echo "🌐 URL: https://app.hanguru.school"
          echo "📅 Time: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"

  # 브랜치 보호를 위한 상태 체크 (비차단)
  production-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [lint-and-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Auto-fix unused imports and variables
        run: |
          echo "🔧 Auto-fixing unused imports and variables..."
          npm run fix-unused || echo "⚠️ Auto-fix completed with warnings"

      - name: Run production checks
        run: |
          echo "🔍 Production environment checks..."
          npm run check-production || {
            echo "⚠️ Production checks completed with warnings"
          }
          echo "✅ Production checks completed"

      - name: Build verification
        run: |
          echo "🔨 Building application for verification..."
          npm run build || {
            echo "❌ Build verification failed"
            exit 1
          }
          echo "✅ Build verification completed"

      - name: Status check completion
        run: |
          echo "✅ production-deploy status check completed"
          echo "This check is required for merging to main branch"
